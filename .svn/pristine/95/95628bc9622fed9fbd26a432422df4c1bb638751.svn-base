/**********
*  Created By: Persistent Automation Team
*  Created On: 12/02/2016
*  Modified On: 12/08/2016
**********/
package com.pathway.scripts;

import java.util.List;
import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;
import com.pathway.selenium.factory.SeleniumFunctions;
import com.pathway.util.Excel;
import cucumber.api.java.en.Then;
import cucumber.api.java.en.When;

public class Consumer_View_Orders_DME extends SeleniumFunctions {

	By engagementList = By.xpath("//*[@id='bodyCell']/div[3]/div[1]/div/div[2]/table");
	By orderTab = By.xpath("//a[contains(@class, 'cons_Order')]");
	By userNavalLabel = By.xpath(".//*[contains(@id,'userNavLabel')]");
	By orderList = By.xpath(".//*[contains(@class,'list _dataTable dataTable no-footer')]");
	By fileBody = By.id("pageid:formid:j_id183:j_id184:j_id187:j_id189:tb");

	// view page
	By verifyApprovalNeededColumn = By.xpath("//*[@id='pageid:formid']/div[3]/div[6]/div/div/span");
	By viewOrderingProvider = By.xpath("//*[@id='pageid:formid']/div[2]/div[13]/div/div/span");
	By viewTelephonicDiagnosis = By.xpath("//*[@id='pageid:formid']/div[2]/div[12]/div/div/span");
	By viewVenderProvider = By.xpath("//*[@id='pageid:formid']/div[2]/div[19]/div/div/span");
	By viewVenderProviderPhone = By.xpath("//*[@id='pageid:formid:j_id139']/span");
	By viewFileBody = By.id("pageid:formid:j_id183:j_id184:j_id187:j_id189:tb");
	By viewFileUpload = By.xpath("//*[@id='pageid:formid:j_id183:j_id184:j_id187:j_id189:0:j_id270']");

	// Data files

	String excel_file = "files//Orders.xlsx";
	String sheet_name = "DME_Order";

	// Data files attribute
	String Ordered = Excel.readFromExcel(excel_file, sheet_name, 1, 0);
	String VendorProvider = Excel.readFromExcel(excel_file, sheet_name, 1, 1);
	String TelephonicDiagnosis = Excel.readFromExcel(excel_file, sheet_name, 1, 2);
	String VendorPhone = Excel.readFromExcel(excel_file, sheet_name, 1, 3);
	String newVendorProvider = Excel.readFromExcel(excel_file, sheet_name, 4, 1);
	String newVendorPhone = Excel.readFromExcel(excel_file, sheet_name, 4, 3);
	String filePathAdd = Excel.readFromExcel(excel_file, sheet_name, 1, 4);
	String filePathEdit = Excel.readFromExcel(excel_file, sheet_name, 4, 4);

	@When("^user clicks on Orders tab on Consumer details page$")
	public void user_clicks_on_Orders_tab_on_Consumer_details_page() throws Throwable {
		click(orderTab);

	}

	@Then("^validates that DME order page is displayed on Consumer details page$")
	public void validates_that_DME_order_page_is_displayed_on_Consumer_details_page() {
		wait(5);
		isElementExist(orderList);
		System.out.println("Orders lists is displayed");
	}

	@Then("^validate that value for Ordering Provider of DME order page on Consumer details page$")
	public void validate_that_value_for_Ordering_Provider_of_DME_order_page_on_Consumer_details_page() {
		String OrderingProvider = getText(userNavalLabel);
		verifyelementText("Values has not succesfully selected for Ordering Provider of DME order page ",
				viewOrderingProvider, OrderingProvider);
	}

	@Then("^validate that value for Vendor/Provider of DME order page on Consumer details page$")
	public void validate_that_value_for_Vendor_Provider_of_DME_order_page_on_Consumer_details_page() {
		verifyelementText("Values has succesfully entered for Vendor/Provider of DME order page ", viewVenderProvider,
				newVendorProvider);
	}

	@Then("^validate that value for Telephonic Diagnosis of DME order page on Consumer details page$")
	public void validate_that_value_for_Telephonic_Diagnosis_of_DME_order_page_on_Consumer_details_page() {
		verifyelementText("Values has not succesfully entered for Telephonic Diagnosis of DME order page ",
				viewTelephonicDiagnosis, TelephonicDiagnosis);
	}

	@Then("^validate that value for Vendor/Provider Phone of DME order page on Consumer details page$")
	public void validate_that_value_for_Vendor_Provider_Phone_of_DME_order_page_on_Consumer_details_page() {
		verifyelementText("Values has not succesfully entered for Vendor/Provider Phone of DME order page ",
				viewVenderProviderPhone, newVendorPhone);
	}

	@Then("^validate that new file has been uploaded on DME order page on Consumer details page$")
	public void validate_that_new_file_has_been_uploaded_on_DME_order_page_on_Consumer_details_page() {
		WebElement filesBody = findElement(fileBody);
		List<WebElement> rows = filesBody.findElements(By.tagName("tr"));
		// file name of the uploaded file
		String fname = rows.get(0).findElements(By.tagName("td")).get(2).getText();

		int fIndex = filePathAdd.lastIndexOf("\\");
		String uploadedFname = filePathAdd.substring(fIndex + 1);
		verifyValues("File has not uploaded", fname, uploadedFname);
	}

	@Then("^clicks on Cancel button on DME order page on Consumer details page$")
	public void clicks_on_Cancel_button_on_DME_order_page_on_Consumer_details_page() {

	}

}
